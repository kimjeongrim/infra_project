data "aws_autoscaling_group" "web_asg" {
  name = aws_eks_node_group.web_node_group.resources[0].autoscaling_groups[0].name
}

data "aws_autoscaling_group" "was_asg" {
  name = aws_eks_node_group.was_node_group.resources[0].autoscaling_groups[0].name
}

resource "aws_lb" "alb" {
  name               = "alb"
  load_balancer_type = "application"
  internal           = false
  security_groups    = [aws_security_group.alb_sg.id]
  subnets            = aws_subnet.web[*].id

  tags = {
    Name = "${var.name}-alb"
  }
}

resource "aws_lb_target_group" "alb_tg" {
  name     = "alb-tg"
  protocol = "HTTP"
  port     = 80
  vpc_id   = aws_vpc.vpc.id

  health_check {
    enabled             = true
    healthy_threshold   = 2
    interval            = 5
    matcher             = "200"
    path                = "/index.html"
    port                = "traffic-port"
    protocol            = "HTTP"
    timeout             = 3
    unhealthy_threshold = 3
  }

  tags = {
    Name = "${var.name}-alb-tg"
  }
}

resource "aws_lb_listener" "alb_li" {
  load_balancer_arn = aws_lb.alb.id
  protocol          = "HTTP"
  port              = 80
  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.alb_tg.arn
  }

  tags = {
    Name = "${var.name}-alb-li"
  }
}

resource "aws_lb_target_group_attachment" "alb_tg_at" {
  for_each = toset(data.aws_autoscaling_group.web_asg.instances[*].instance_id)
  target_group_arn = aws_lb_target_group.alb_tg.arn
  target_id        = each.value
  port             = 80
}

resource "aws_lb" "nlb" {
  name               = "nlb"
  load_balancer_type = "network"
  internal           = false
  subnets            = aws_subnet.was[*].id

  tags = {
    Name = "${var.name}-nlb"
  }
}

resource "aws_lb_target_group" "nlb_tg" {
  name     = "nlb-tg"
  protocol = "TCP"
  port     = 8080
  vpc_id   = aws_vpc.vpc.id

  tags = {
    Name = "${var.name}-nlb-tg"
  }
}

resource "aws_lb_listener" "nlb_li" {
  load_balancer_arn = aws_lb.nlb.id
  protocol          = "TCP"
  port              = 8080
  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.nlb_tg.arn
  }

  tags = {
    Name = "${var.name}-nlb-li"
  }
}

resource "aws_lb_target_group_attachment" "nlb_tg_at" {
  for_each = toset(data.aws_autoscaling_group.was_asg.instances[*].instance_id)
  target_group_arn = aws_lb_target_group.nlb_tg.arn
  target_id        = each.value
  port             = 8080
}
